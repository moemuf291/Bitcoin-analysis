#!/usr/bin/env python3
"""
Bitcoin Analysis Visualizer Startup Script

This script starts the Flask web application for visualizing Bitcoin analysis data.
Make sure you have JSON files generated by bitcoin_analysis.py before running this.
"""

import os
import sys
import subprocess

def check_requirements():
    """Check if required packages are installed"""
    required_packages = ['flask', 'plotly', 'networkx']
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print("❌ Missing required packages:")
        for pkg in missing_packages:
            print(f"   - {pkg}")
        print("\n💡 Install missing packages with:")
        print("   pip3 install --break-system-packages flask plotly networkx")
        return False
    return True

def check_json_files():
    """Check if any JSON analysis files exist"""
    json_files = [f for f in os.listdir('.') if f.startswith('bitcoin_analysis_') and f.endswith('.json')]
    return len(json_files) > 0

def main():
    print("🚀 Bitcoin Analysis Visualizer")
    print("=" * 40)
    
    # Check requirements
    print("📦 Checking requirements...")
    if not check_requirements():
        sys.exit(1)
    print("✅ All required packages are installed")
    
    # Check for JSON files
    print("\n📁 Checking for analysis files...")
    if check_json_files():
        json_count = len([f for f in os.listdir('.') if f.startswith('bitcoin_analysis_') and f.endswith('.json')])
        print(f"✅ Found {json_count} analysis file(s)")
    else:
        print("⚠️  No JSON analysis files found")
        print("💡 Run 'python3 bitcoin_analysis.py' first to generate data")
        
        choice = input("\nContinue anyway? (y/n): ").lower().strip()
        if choice != 'y':
            print("👋 Goodbye!")
            sys.exit(0)
    
    # Start Flask app
    print("\n🌐 Starting Flask web server...")
    print("📱 Open your browser and go to: http://localhost:5000")
    print("🛑 Press Ctrl+C to stop the server")
    print("-" * 40)
    
    try:
        from app import app
        app.run(debug=True, host='0.0.0.0', port=5000)
    except KeyboardInterrupt:
        print("\n\n👋 Server stopped. Goodbye!")
    except Exception as e:
        print(f"\n❌ Error starting server: {e}")
        print("💡 Make sure app.py exists and is properly configured")

if __name__ == "__main__":
    main()